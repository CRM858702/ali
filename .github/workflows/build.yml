name: Release Power Platform Solution

on:
  workflow_dispatch:
    inputs:
      # Change this value
      solution_name:
        description: 'name of the solution to worked on from Power Platform'
        required: true
        default: Solution1
       #Do Not change these values
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder: 
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: solutions/

jobs:
  release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Verify Node.js Installation
        run: |
          node -v
          npm -v

      - name: Install Power Platform CLI
        run: npm install -g pac

      - name: Verify Power Platform CLI Installation
        run: pac --version

      - name: Authenticate with Power Platform
        run: pac auth create --url https://dev-aliii.crm.dynamics.com/ --name "DEV_POWER_PLATFORM_URL" --client-id ${{ secrets.AZURE_CLIENT_ID }} --client-secret ${{ secrets.AZURE_CLIENT_SECRET }} --tenant-id ${{ secrets.AZURE_TENANT_ID }}

      - name: Export Solution as Managed
        run: |
          pac solution export --path "${{ github.event.inputs.solution_target_folder }}/managed.zip" --name "${{ github.event.inputs.solution_name }}" --managed --async --max-async-wait-time 60

      - name: Upload Managed Solution
        uses: actions/upload-artifact@v3
        with:
          name: managed-solution
          path: "${{ github.event.inputs.solution_target_folder }}/managed.zip"

      - name: Trigger Test Environment Deployment
        uses: actions/github-script@v6
        with:
          script: |
            const dispatch = await github.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy-to-test.yml',
              ref: context.ref,
              inputs: {
                solution_name: "${{ github.event.inputs.solution_name }}",
                solution_target_folder: "${{ github.event.inputs.solution_target_folder }}"
              }
            });
